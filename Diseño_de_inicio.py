import streamlit as st
import pandas as pd

# Configuraci칩n de la p치gina web
st.set_page_config(
    page_title="EL CATALOGO SISMICO PER칔 1960-2023 (IGP)",
    page_icon="游깴",
   
)

# Introducci칩n de la aplicaci칩n web
st.write("""
    Esta p치gina web proporciona acceso al dataset 'Cat치logo S칤smico 1960-2023 (IGP)',
          con informaci칩n detallada sobre los sismos registrados, incluyendo mapas 
         de epicentros organizados por a침o, magnitud y profundidad. Adem치s, ofrece 
         gr치ficos interactivos que analizan la actividad s칤smica en funci칩n de la 
         magnitud, profundidad y fecha, y permite filtrar los datos seg칰n estos criterios, 
         facilitando un an치lisis preciso y personalizado.
""")

# T칤tulo principal de la aplicaci칩n
st.title("EL CATALOGO SISMICO EN EL PER칔 (1960-2023) (IGP)")

st.write("""El Per칰, al ubicarse en la zona de interacci칩n de 
         las placas de Nazca y Sudamericana, es un pa칤s s칤smico 
         que ha experimentado sismos de gran magnitud, ocasionando 
         graves da침os en infraestructura y p칠rdidas de vidas humanas. 
         Por esta raz칩n, es fundamental contar con un registro 
         detallado de los sismos ocurridos en los 칰ltimos a침os, 
         que permita estar mejor preparados para futuros eventos. 
         En este contexto, se ha decidido realizar un cat치logo s칤smico 
         para recopilar y analizar estos sucesos, como herramienta 
         de prevenci칩n y apoyo en la toma de decisiones informadas.
         """)

st.write(
    """
    Un cat치logo s칤smico es una base de datos que contiene todos los 
    par치metros que caracterizan a un sismo, calculados en las mismas 
    condiciones, con el objetivo de constituirse como una base 
    homog칠nea 칰til para la realizaci칩n de estudios en sismolog칤a. 
    El presente cat치logo ha sido elaborado por el Instituto 
    Geof칤sico del Per칰 (IGP), instituci칩n responsable del 
    monitoreo de la actividad s칤smica en el pa칤s, y contiene 
    todos aquellos sismos percibidos por la poblaci칩n y registrados 
    por la Red S칤smica Nacional desde 1960, fecha en la que 
    se inicia la vigilancia instrumental de la sismicidad 
    en el Per칰.
    """
)

# Secci칩n para cargar y mostrar el conjunto de datos
st.header("Conjunto de datos")

# Funci칩n para cargar los datos del archivo Excel
@st.cache
def load_data():
    url = "C칍DIGO/Dataset_1960_2023.xlsx"
    data_raw = pd.read_excel(url)   # Lee el archivo Excel desde el enlace
    data = data_raw.set_index("ID") # Establece la columna 'ID' como 칤ndice
    return data


loading = st.text("Cargando datos ...") # Mensaje mientras los datos se cargan
data = load_data()
st.dataframe(data)
loading.empty()

# El enlace directo al conjunto de datos
st.write("El dataset del cat치logo s칤smico se encuentra en el siguiente [link](C칍DIGO/Dataset_1960_2023.xlsx)")

# Informaci칩n sobre las columnas del dataset
st.subheader("Columnas")
st.write(
    """
    - **FECHA_UTC**: Hora universal coordinado (UTC), es la fecha con cinco horas 
        adelantadas con respecto a la hora local debido a que Peru 
        se encuentra en una zona horaria UTC -5. 
    - **HORA_UTC**: Hora universal coordinada (UTC), cinco horas adelantadas 
        con respecto a la hora local debido a que Peru se encuentra 
        en una zona horaria UTC -5.
    - **LATITUD**: Es la distancia en grados, minutos y segundos que hay con 
        respecto al paralelo principal, que es el ecuador (0췈). 
        La latitud puede ser norte y sur.
    - **LONGITUD**: Es la distancia en grados, minutos y segundos que hay 
        con respecto al meridiano principal, que es el meridiano de Greenwich (0췈).
    - **PROFUNDIDAD**: Profundidad del foco s칤smico por debajo de la superficie.
    - **MAGNITUD**: Corresponde a la cantidad de energ칤a liberada por el sismo 
        y esta expresada en la escala de magnitud momento Mw.
    - **FECHA_CORTE**: Fecha de corte de informaci칩n.
"""
)

# Funci칩n para transformar y limpiar los datos
def get_new_data(data):
    FECHA_CORTE = data.at[0, "FECHA_CORTE"]
    data = data.drop(columns=["FECHA_CORTE"], axis=1)
    data["FECHA_UTC"] = pd.to_datetime(data["FECHA_UTC"], format="%Y%m%d")
    data.rename(columns={"LATITUD": "Latitud", "LONGITUD": "Longitud"}, inplace=True)
    # Si la fecha de corte no est치 en el estado de sesi칩n, la guarda
    if "FECHA_CORTE" not in st.session_state:
        st.session_state["FECHA_CORTE"] = FECHA_CORTE
    
    # Crea nuevas columnas para a침o, mes, d칤a, hora, minutos y segundos
    new_data = data.copy(deep=True)
    new_data["A침o"] = new_data["FECHA_UTC"].dt.year
    new_data["Mes"] = new_data["FECHA_UTC"].dt.month
    new_data["Dia"] = new_data["FECHA_UTC"].dt.day
    new_data["HORA_UTC"] = new_data["HORA_UTC"].astype(str)
    dic_hora = {
        "Hora": [],
        "Minutos": [],
        "Segundos": [],
    }
    for i in new_data["HORA_UTC"]:
        dic_hora["Hora"].append(i[:-4])
        dic_hora["Minutos"].append(i[-4:-2])
        dic_hora["Segundos"].append(i[-2:])
        
    # Elimina las columnas de 'FECHA_UTC' y 'HORA_UTC' y concatena las nuevas columnas de hora
    new_data.drop(["FECHA_UTC"], axis=1, inplace=True)
    new_data.drop(["HORA_UTC"], axis=1, inplace=True)
    new_data = pd.concat([new_data, pd.DataFrame(dic_hora)], axis=1)
    # Renombra algunas columnas y organiza el orden
    new_data.rename(
        {"MAGNITUD": "Magnitud", "PROFUNDIDAD": "Profundidad"}, axis=1, inplace=True
    )
    new_data = new_data[
        [
            "A침o",
            "Mes",
            "Dia",
            "Hora",
            "Minutos",
            "Segundos",
            "Latitud",
            "Longitud",
            "Magnitud",
            "Profundidad",
        ]
    ]
    return new_data

# Llama a la funci칩n para procesar los datos
new_data = get_new_data(data)
# Guarda los datos procesados en el estado de sesi칩n para poder utilizarlos m치s tarde
if "data" not in st.session_state:
    st.session_state["data"] = new_data

# Muestra los cambios realizados en los datos
st.subheader("Cambios en los datos")
st.write("Se hizo cambios al conjunto de datos para un mejor an치lisis.")
st.subheader("Columnas")
st.write(
    """
    - **A침o**: El a침o en que ocurri칩 el sismo.
    - **Mes**: El mes en que ocurri칩 el sismo.
    - **D칤a**: El d칤a en que ocurri칩 el sismo.
    - **Hora**: Hora cuando ocurri칩 el sismo.
    - **Minutos**: Minutos cuando ocurri칩 el sismo.
    - **Segundos**: Segundos cuando ocurri칩 el del sismo.
    - **Latitud**: Es la distancia en grados, minutos y segundos que hay con 
        respecto al paralelo principal, que es el ecuador (0췈). 
        La latitud puede ser norte y sur.
    - **Longitud**: Es la distancia en grados, minutos y segundos que hay 
        con respecto al meridiano principal, que es el meridiano de Greenwich (0췈).
    - **Profundidad**: Profundidad del foco s칤smico por debajo de la superficie.
    - **Magnitud**: Corresponde a la cantidad de energ칤a liberada por el sismo 
        y esta expresada en la escala de magnitud momento Mw.
"""
)
st.write(new_data) # Muestra los datos procesados

# Integrantes del grupo:
with st.sidebar:
    st.write(f"Authores : ")
    name = "- BERTIL VASTHIAN "
    last_name = "RODRIGUEZ VALDERRAMA"
    st.write(f"  {name} {last_name}")
    name = "- CARLOS ENRIQUEZ "
    last_name = "MANTILLA AGUILA"
    st.write(f"  {name} {last_name}")
    name = "- NILDA MARIBEL"
    last_name = "TURPO HUAMAN"
    st.write(f"  {name} {last_name}")
    name = "- NOEMI SALOMINA"
    last_name = "ARQUI칌O CERNA"
    st.write(f"  {name} {last_name}")
